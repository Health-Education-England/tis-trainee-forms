plugins {
  id 'java'
  id 'org.springframework.boot' version '2.2.4.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'

  // Code quality plugins
  id "checkstyle"
  id "jacoco"
  id "org.sonarqube" version "2.8"
}

group = 'uk.nhs.hee.tis.trainee'
version = '0.0.2'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  //Spring data with MongoDB
  implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
  // Spring Boot starters
  implementation 'org.springframework.boot:spring-boot-starter-web'
  /*testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }*/

  testImplementation "org.springframework.boot:spring-boot-starter-test"

  // Lombok
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  // MapStruct
  implementation "org.mapstruct:mapstruct:1.3.1.Final"
  annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
  testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

  // Sentry reporting
  compile 'io.sentry:sentry-spring:1.7.30'

  //H2 for unit testing
  testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
}

checkstyle {
  toolVersion = "8.29"
  config = resources.text.fromArchiveEntry(configurations.checkstyle[0], 'google_checks.xml')
}

jacocoTestReport {
  reports {
    html.enabled true
    xml.enabled true
  }
}

sonarqube {
  properties {
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.login", System.getenv("SONAR_TOKEN")
    property "sonar.organization", "health-education-england"
    property "sonar.projectKey", "Health-Education-England_tis-trainee-forms"
    property "sonar.java.checkstyle.reportPaths",
      "build/reports/checkstyle/main.xml,build/reports/checkstyle/test.xml"
  }
}

test {
  finalizedBy jacocoTestReport
  useJUnitPlatform()
}
